plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	enabled = false // plain jar 생성 안 함
	manifest {
		attributes 'Main-Class': 'com.study.ex1jpabasic.Ex1JpaBasicApplication'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 원활한 개발 환경을 위해 devtools 주입 : 개발 시 개발한 파일만 Build 메뉴에서 Recompile
	implementation 'org.springframework.boot:spring-boot-devtools'

	// jpa로 생성해주는 쿼리에 parameter가 ?로 찍히는걸 실제 binding 된 parameter의 value로 표시해 줌(개꿀)
	// 다만 운영에 반영할 경우 성능에 (병목현상) 영향을 줄 수 있기 때문에 운영 반영은 고민해볼 필요가 있음
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
